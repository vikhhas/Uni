while True:
    word0 = input('Введіть словоформу слова з переліку: парта, ранній, пахнути: ')
    word = word0.lower().strip(' ,/\.')
    counter = len(word)

    list_of_nouns2 = ['парта', 'парту', 'парті', 'парти', 'партою', 'парто','парт', 'партах', 'партам', 'партами']
    list_of_adjectives1 = ['ранній', 'раннього', 'ранньому', 'раннім', 'рання', 'ранньої', 'ранню', 'ранньою', 'раннє',
    'ранні', 'ранніх', 'ранніми']
    list_of_verbs1 = ['пахнути', 'пахну', 'пахнеш', 'пахне', 'пахнемо', 'пахнете', 'пахнуть', 'пахнутиму', 'пахнутимеш', 'пахнутиме', 'пахнутимемо',
    'пахнутимем', 'пахнутимете', 'пахнутимуть', 'пахнув', 'пах', 'пахнула', 'пахла', 'пахнуло', 'пахло', 'пахнули', 'пахли', 'пахни', 'пахнімо', 'пахніть']

    #ІМЕННИК
    if word in list_of_nouns2:
        if counter == 4:
            print(f'Словоформа ділиться так: {word[0:4]}-0. Це родовий/знахідний відмінок множини, жін. рід.')
        elif counter == 5:
            if word[-1] == 'а':
                print(f'Словоформа ділиться так: {word[0:4]}-{word[-1]}. Це називний відмінок однини, жін. рід.')
            elif word[-1] == 'у':
                print(f'Словоформа ділиться так: {word[0:4]}-{word[-1]}. Це знахідний відмінок однини, жін. рід.')
            elif word[-1] == 'и':
                print(f'Словоформа ділиться так: {word[0:4]}-{word[-1]}. Це родовий відмінок однини або називний/кличний/знахідний множини, жін. рід.')
            elif word[-1] == 'і':
                print(f'Словоформа ділиться так: {word[0:4]}-{word[-1]}. Це давальний/місцевий відмінок однини, жін. рід.')
            elif word[-1] == 'о':
                print(f'Словоформа ділиться так: {word[0:4]}-{word[-1]}. Це кличний відмінок однини, жін. рід.')
        elif counter == 6:
            if word[-2:] == 'ою':
                print(f'Словоформа ділиться так: {word[0:4]}-{word[-2:]}. Це орудний відмінок однини, жін. рід.')
            elif word[-2:] == 'ах':
                print(f'Словоформа ділиться так: {word[0:4]}-{word[-2:]}. Це місцевий відмінок множини, жін. рід.')
            elif word[-2:] == 'ам':
                print(f'Словоформа ділиться так: {word[0:4]}-{word[-2:]}. Це давальний відмінок множини, жін. рід.')
        elif counter == 7:
            if word[4:] == 'ами':
                print(f'Словоформа ділиться так: {word[0:4]}-{word[-3:]}. Це орудний відмінок множини, жін. рід.')

    #ПРИКМЕТНИК
    elif word in list_of_adjectives1:
        if word[-1] == 'і':
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-1]}. Це прикметник називного/знахідного/кличного відмінка множини.')
        elif word[-1] == 'я':
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-1]}. Це прикметник називного/кличного відмінка однини, жін. рід')
        elif word[-2:] == 'ою':
            print(f'Словоформа ділиться так: {word[0:5]}-{word[-2:]}. Це прикметник орудного відмінка однини, жін. рід.')
        elif word[-1] == 'ю':
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-1]}. Це прикметник знахідного відмінка однини, жін. рід')
        elif word[-1] == 'є':
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-1]}. Це прикметник називного/знахідного/кличного відмінка однини, сер. рід')
        elif word[-2:] == 'ій':
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-2:]}. Це прикметник давального/місцевого відмінка однини жін. роду та називного/знахідного/кличного відмінок однини чол. роду.')
        elif word[-2:] == 'іх':
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-2:]}. Це прикметник родового/знахідного/місцевого відмінків множини.')
        elif word[-2:] == 'ім':
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-2:]}. Це прикметник орудного/місцевого відмінка однини, чол. та сер. родів, та давального відмінка множини.')
        elif word[-2:] == 'ої':
            print(f'Словоформа ділиться так: {word[0:5]}-{word[-2:]}. Це прикметник родового відмінка однини, жін. рід.')
        elif word[-3:] == 'ого':
            print(f'Словоформа ділиться так: {word[0:5]}-{word[-3:]}. Це прикметник родового/знахідного відмінка однини чол. р. та родового відмінка сер. роду.')
        elif word[-3:] == 'ому':
            print(f'Словоформа ділиться так: {word[0:5]}-{word[-3:]}. Це прикметник давального/місцевого відмінка однини, чол. та сер. родів.')
        elif word[-3:] == 'іми':
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-3:]}. Це прикметник орудного відмінка множини')

    #ДІЄСЛОВО
    elif word in list_of_verbs1:
        if word == 'пахнути':
            print(f'Словоформа ділиться так: {word[0:5]}-{word[-2:]}. "ти" - суфікс інфінітива.')
        elif word[-1] == 'у' and counter == 5:
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-1]}. "у" - флексія. Це дієслово 1 особи однини теперішнього часу.')
        elif word[-1] == 'е' and counter == 5:
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-1]}. "е" - флексія. Це дієслово 3 особи однини теперішнього часу.')
        elif word[-1] == 'в'and counter == 6:
            print(f'Словоформа ділиться так: {word[0:5]}-{word[-1]}-0. "в" - суфікс, нульова флексія. Це дієслово 3 особи однини чоловічого роду минулого часу.')
        elif word[-1] == 'и' and word == 'пахни':
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-1]}. "и" - флексія. Це дієслово 2 особи однини наказового способу.')
        elif word[-2:] == 'еш' and counter == 6:
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-2:]}. "еш" - флексія. Це дієслово 2 особи однини теперішнього часу.')
        elif word[-1] == 'а' and counter == 7:
            print(f'Словоформа ділиться так: {word[0:5]}-{word[-2]}-{word[-1]}. "л" - суфікси, "а" - флексія. Це дієслово 3 особи однини жіночого роду минулого часу.')
        elif word[-1] == 'о' and word == 'пахнуло':
            print(f'Словоформа ділиться так: {word[0:5]}-{word[-2]}-{word[-1]}. "л" - суфікс, "о" - флексія. Це дієслово 3 особи однини середнього роду минулого часу.')
        elif word[-1] == 'и' and counter == 7:
            print(f'Словоформа ділиться так: {word[0:5]}-{word[-2]}-{word[-1]}. "л" - суфікс, "и" - флексія. Це дієслово множини минулого часу.')
        elif word[-3:] == 'емо' and counter == 7:
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-3:]}. "емо" - флексія. Це дієслово 1 особи множини теперішнього часу.')
        elif word[-3:] == 'ете'and counter == 7:
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-3:]}. "ете" - флексія. Це дієслово 2 особи множини теперішнього часу.')
        elif word[-3:] == 'уть' and counter == 7:
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-3:]}. "уть" - флексія. Це дієслово 3 особи множини теперішнього часу.')
        elif word[-3:] == 'імо':
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-3:]}. "імо" - флексія. Це дієслово 1 особи множини наказового способу.')
        elif word[-3:] == 'іть':
            print(f'Словоформа ділиться так: {word[0:4]}-{word[-3:]}. "іть" - флексія. Це дієслово 2 особи множини наказового способу.')
        elif word[-2:] == 'му':
            print(f'Словоформа ділиться так: {word[0:5]}-{word[5:7]}-{word[-2]}-{word[-1]}. "ти" - суфікс інфінітива, "м" - словозмінний суфікс, \n"у" - флексія. Це дієслово 1 особи однини майбутнього часу недоконаного виду.')
        elif word[-2:] == 'ме':
            print(f'Словоформа ділиться так: {word[0:5]}-{word[5:7]}-{word[-2]}-{word[-1]}. "ти" - суфікс інфінітива, "м" - словозмінний суфікс, \n"е" - флексія. Це дієслово 3 особи однини майбутнього часу недоконаного виду.')
        elif word[-3:] == 'меш':
            print(f'Словоформа ділиться так: {word[0:5]}-{word[5:7]}-{word[-3]}-{word[-2:]}. "ти" - суфікс інфінітива, "м" - словозмінний суфікс, \n"еш" - флексія. Це дієслово 2 особи однини майбутнього часу недоконаного виду.')
        elif word[-3:] == 'мем':
            print(f'Словоформа ділиться так: {word[0:5]}-{word[5:7]}-{word[-3]}-{word[-2:]}. "ти" - суфікс інфінітива, "м" - словозмінний суфікс, \n"ем" - флексія. Це дієслово 1 особи множини майбутнього часу недоконаного виду.')
        elif word[-3:] == 'емо' and counter == 11:
            print(f'Словоформа ділиться так: {word[0:5]}-{word[5:7]}-{word[-4]}-{word[-3:]}. "ти" - суфікс інфінітива, "м" - словозмінний суфікс, \n"емо" - флексія. Це дієслово 1 особи множини майбутнього часу недоконаного виду.')
        elif word[-3:] == 'ете' and counter == 11:
            print(f'Словоформа ділиться так: {word[0:5]}-{word[5:7]}-{word[-4]}-{word[-3:]}. "ти" - суфікс інфінітива, "м" - словозмінний суфікс, \n"ете" - флексія. Це дієслово 2 особи множини майбутнього часу недоконаного виду.')
        elif word[-3:] == 'уть' and counter == 11:
            print(f'Словоформа ділиться так: {word[0:5]}-{word[5:7]}-{word[-4]}-{word[-3:]}. "ти" - суфікс інфінітива, "м" - словозмінний суфікс, \n"уть" - флексія. Це дієслово 3 особи множини майбутнього часу недоконаного виду.')
        elif counter == 3:
            print(f'Словоформа ділиться так: {word}-0. Це дієслово чоловічого роду (3 ос.) минулого часу.')
        elif counter == 5 and word[-2:] == 'ла':
            print(f'Словоформа ділиться так: {word[0:3]}-{word[-2]}-{word[-1]}. "л" - суфікс, "а" - флексія. Це дієслово 3 особи однини жіночого роду минулого часу.')
        elif counter == 5 and word[-2:] == 'ло':
            print(f'Словоформа ділиться так: {word[0:3]}-{word[-2]}-{word[-1]}. "л" - суфікс, "о" - флексія. Це дієслово 3 особи однини середнього роду минулого часу.')
        elif counter == 5 and word == 'пахли':
            print(f'Словоформа ділиться так: {word[0:3]}-{word[-2]}-{word[-1]}. "л" - суфікс, "и" - флексія. Це дієслово множини минулого часу.')

    while True:
        cont = input('Бажаєте продовжити? Введіть "так" або "ні": ')
        cont1 = cont.lower().strip(' ,/\.')
        if cont1 == 'так' or cont1 == 'ні':
            break
        else:
            print('Ви ввели щось не так, будь ласка спробуйте ще раз.')
            continue
    if cont1 == 'ні': break
input()